subdesign ip
(
    addrIn[7..0] : input;
    addrOut[7..0] : output;
    inc : input; % increment IP %
    load : input; % load addIn to IP (more important than inc) %
    clk : input;
)

variable
    reg[7..0] : dff;
    carr[7..0] : node;

begin
    reg[].(clrn, prn, clk) = (VCC, VCC, clk);

    reg[0].d = load & addrIn[0] # !load & inc & !reg[0].q;
    carr[0] = reg[0].q;
    for i in 1 to 7 generate
        reg[i].d = load & addrIn[i] # !load & inc & (reg[i].q $ carr[i-1]);
        carr[i] = reg[i].q & carr[i-1];
    end generate;

    addrOut[] = reg[].q;
end;
